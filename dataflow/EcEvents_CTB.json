{
	"name": "EcEvents_CTB",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DataTypeConversion"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "aggregateEcEventGkey"
				}
			],
			"script": "source(output(\n\t\tecEventGkey as string,\n\t\tyardGkey as short,\n\t\tYARDID as string,\n\t\tFCYID as string,\n\t\tcheKind as string,\n\t\tcheShortName as string,\n\t\tcheID as short,\n\t\tEcEventTime as string,\n\t\ttype as short,\n\t\tsubType as short,\n\t\ttypeDescription as string,\n\t\tfromCheIdName as string,\n\t\tToCheIdName as string,\n\t\tunitIdName as string,\n\t\tpowName as string,\n\t\tpoolName as string,\n\t\tworkQueue as string,\n\t\ttravelDistance as short,\n\t\tmoveKind as string,\n\t\tisTwinMove as string,\n\t\tstartDistance as short,\n\t\tworkAssignmentId as long,\n\t\tunitReference as string,\n\t\ttranId as string,\n\t\tlocType as string,\n\t\tlocId as string,\n\t\tlocSlot as string,\n\t\topsPosId as string,\n\t\tunladenLoctype as string,\n\t\tunladenLocid as string,\n\t\tunladenLocSlot as string,\n\t\tladenLoctype as string,\n\t\tladenLocid as string,\n\t\tladenLocSlot as string,\n\t\tlastEstMoveTime as string\n\t),\n\tuseSchema: false,\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmoveFiles: ['bronze/ecevents/load','bronze/ecevents/archive'],\n\tformat: 'delimited',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'bronze/ecevents/load',\n\tcolumnDelimiter: ';',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> source1\nsource1 derive(EcEventTime = coalesce(toTimestamp(EcEventTime,'dd-MM-yy HH:mm:ss'),toTimestamp(EcEventTime,'dd.MM.yy HH:mm:ss'),toTimestamp(concatWS(' ',substringIndex(EcEventTime,'.',3),right(EcEventTime, 2)),'dd-MMM-yy hh.mm.ss a'),toTimestamp(EcEventTime,'dd/MM/yyyy\\'T\\'HH:mm:ss'), toTimestamp(EcEventTime,'yyyy-MM-dd HH:mm:ss.SSS'),toTimestamp(EcEventTime,'dd/MM/yyyy HH:mm:ss'),toTimestamp(EcEventTime,'dd-MM-yyyy HH:mm:ss')),\n\t\tecEventGkey = toLong(ecEventGkey),\n\t\tcheID = toLong(cheID),\n\t\tYear = iifNull(year(coalesce(toTimestamp(EcEventTime,'dd-MM-yy HH:mm:ss'),toTimestamp(EcEventTime,'dd.MM.yy HH:mm:ss'),toTimestamp(concatWS(' ',substringIndex(EcEventTime,'.',3),right(EcEventTime, 2)),'dd-MMM-yy hh.mm.ss a'),toTimestamp(EcEventTime,'dd/MM/yyyy\\'T\\'HH:mm:ss'), toTimestamp(EcEventTime,'yyyy-MM-dd HH:mm:ss.SSS'),toTimestamp(EcEventTime,'dd/MM/yyyy HH:mm:ss'),toTimestamp(EcEventTime,'dd-MM-yyyy HH:mm:ss'))),0),\n\t\tMonth = iifNull(month(coalesce(toTimestamp(EcEventTime,'dd-MM-yy HH:mm:ss'),toTimestamp(EcEventTime,'dd.MM.yy HH:mm:ss'),toTimestamp(concatWS(' ',substringIndex(EcEventTime,'.',3),right(EcEventTime, 2)),'dd-MMM-yy hh.mm.ss a'),toTimestamp(EcEventTime,'dd/MM/yyyy\\'T\\'HH:mm:ss'), toTimestamp(EcEventTime,'yyyy-MM-dd HH:mm:ss.SSS'),toTimestamp(EcEventTime,'dd/MM/yyyy HH:mm:ss'),toTimestamp(EcEventTime,'dd-MM-yyyy HH:mm:ss'))),0),\n\t\tWeek = iifNull(weekOfYear(coalesce(toTimestamp(EcEventTime,'dd-MM-yy HH:mm:ss'),toTimestamp(EcEventTime,'dd.MM.yy HH:mm:ss'),toTimestamp(concatWS(' ',substringIndex(EcEventTime,'.',3),right(EcEventTime, 2)),'dd-MMM-yy hh.mm.ss a'),toTimestamp(EcEventTime,'dd/MM/yyyy\\'T\\'HH:mm:ss'), toTimestamp(EcEventTime,'yyyy-MM-dd HH:mm:ss.SSS'),toTimestamp(EcEventTime,'dd/MM/yyyy HH:mm:ss'),toTimestamp(EcEventTime,'dd-MM-yyyy HH:mm:ss'))),0)) ~> DataTypeConversion\naggregateEcEventGkey alterRow(upsertIf(true()),\n\tinsertIf(true())) ~> AlterRow1\nDataTypeConversion select(mapColumn(\n\t\tecEventGkey,\n\t\tyardGkey,\n\t\tYardID = YARDID,\n\t\tFcyID = FCYID,\n\t\tcheKind,\n\t\tcheName = cheShortName,\n\t\tcheID,\n\t\tEcEventTime,\n\t\ttype,\n\t\tsubType,\n\t\ttypeDescription,\n\t\tfromCheIdName,\n\t\tToCheIdName,\n\t\tunitIdName,\n\t\tpowName,\n\t\tpoolName,\n\t\tworkQueue,\n\t\ttravelDistance,\n\t\tmoveKind,\n\t\tisTwinMove,\n\t\tstartDistance,\n\t\tworkAssignmentId,\n\t\tunitReference,\n\t\ttranId,\n\t\tlocType,\n\t\tlocId,\n\t\tlocSlot,\n\t\topsPosId,\n\t\tunladenLoctype,\n\t\tunladenLocid,\n\t\tunladenLocSlot,\n\t\tladenLoctype,\n\t\tladenLocid,\n\t\tladenLocSlot,\n\t\tlastEstMoveTime,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(isNull(ecEventGkey)==false()) ~> Filter1\nFilter1 aggregate(groupBy(ecEventGkey),\n\teach(match(name!='ecEventGkey'), $$ = first($$))) ~> aggregateEcEventGkey\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tecEventGkey as long,\n\t\tyardGkey as short,\n\t\tYardID as string,\n\t\tFcyID as string,\n\t\tcheKind as string,\n\t\tcheName as string,\n\t\tcheID as long,\n\t\tEcEventTime as timestamp,\n\t\ttype as short,\n\t\tsubType as short,\n\t\ttypeDescription as string,\n\t\tfromCheIdName as boolean,\n\t\tToCheIdName as boolean,\n\t\tunitIdName as string,\n\t\tpowName as string,\n\t\tpoolName as string,\n\t\tworkQueue as string,\n\t\ttravelDistance as short,\n\t\tmoveKind as string,\n\t\tisTwinMove as boolean,\n\t\tstartDistance as short,\n\t\tworkAssignmentId as double,\n\t\tunitReference as string,\n\t\ttranId as string,\n\t\tlocType as string,\n\t\tlocId as string,\n\t\tlocSlot as string,\n\t\topsPosId as string,\n\t\tunladenLoctype as string,\n\t\tunladenLocid as string,\n\t\tunladenLocSlot as string,\n\t\tladenLoctype as string,\n\t\tladenLocid as string,\n\t\tladenLocSlot as string,\n\t\tlastEstMoveTime as string,\n\t\tYear as integer,\n\t\tMonth as integer,\n\t\tWeek as integer\n\t),\n\tformat: 'delta',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'silver/ecevents',\n\tmergeSchema: true,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ecEventGkey'],\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tecEventGkey,\n\t\tyardGkey,\n\t\tYardID,\n\t\tFcyID,\n\t\tcheKind,\n\t\tcheName,\n\t\tcheID,\n\t\tEcEventTime,\n\t\ttype,\n\t\tsubType,\n\t\ttypeDescription,\n\t\tfromCheIdName,\n\t\tToCheIdName,\n\t\tunitIdName,\n\t\tpowName,\n\t\tpoolName,\n\t\tworkQueue,\n\t\ttravelDistance,\n\t\tmoveKind,\n\t\tisTwinMove,\n\t\tstartDistance,\n\t\tworkAssignmentId,\n\t\tunitReference,\n\t\ttranId,\n\t\tlocType,\n\t\tlocId,\n\t\tlocSlot,\n\t\topsPosId,\n\t\tunladenLoctype,\n\t\tunladenLocid,\n\t\tunladenLocSlot,\n\t\tladenLoctype,\n\t\tladenLocid,\n\t\tladenLocSlot,\n\t\tlastEstMoveTime,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t),\n\tpartitionBy('key',\n\t\t0,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t)) ~> sink1"
		}
	}
}