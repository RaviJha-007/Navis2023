{
	"name": "GMPH_CTB",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				},
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "DerivedColumn5"
				},
				{
					"name": "DerivedColumn6"
				},
				{
					"name": "Filter3"
				},
				{
					"name": "Filter4"
				},
				{
					"name": "DerivedColumn7"
				},
				{
					"name": "Join2"
				},
				{
					"name": "DerivedColumn8"
				},
				{
					"name": "DerivedColumn9"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Filter5"
				},
				{
					"name": "Select3"
				},
				{
					"name": "aggregate2"
				}
			],
			"script": "source(output(\n\t\tmve_gkey as integer,\n\t\tUnit_Nbr as string,\n\t\tFacility_Id as string,\n\t\tComplex_Id as string,\n\t\tYard_Id as string,\n\t\tCarrier_Visit_Key as integer,\n\t\tEvent_Type_Id as string,\n\t\tMove_Kind as string,\n\t\tFrom_Location as string,\n\t\tTo_Location as string,\n\t\tFrom_Position_Name as string,\n\t\tTo_Position_Name as string,\n\t\tCarry_CHE_Operator_Id as short,\n\t\tFetch_CHE_Operator_Id as string,\n\t\tPut_CHE_Operator_Id as string,\n\t\tFetch_CHE_Id as long,\n\t\tFetch_CHE_Kind as string,\n\t\tCarry_CHE_Id as long,\n\t\tCarry_CHE_Kind as string,\n\t\tPut_CHE_Id as long,\n\t\tPut_CHE_Kind as string,\n\t\tQC_CHE_Id as long,\n\t\tQC_CHE_Kind as string,\n\t\tt_carry_complete as timestamp,\n\t\tt_put as timestamp,\n\t\tt_fetch as timestamp,\n\t\tt_dispatch as timestamp,\n\t\tt_discharge as timestamp,\n\t\tt_carry_dispatch as timestamp,\n\t\tt_carry_fetch_ready as timestamp,\n\t\tt_carry_put_ready as timestamp,\n\t\tdist_carry as integer,\n\t\tdist_start as short,\n\t\tTwin_Fetch as string,\n\t\tTwin_Carry as string,\n\t\tTwin_Put as string,\n\t\tCategory_Id as string,\n\t\tFreight_Kind_Id as string,\n\t\tto_pos_gkey as integer,\n\t\tfm_pos_gkey as integer,\n\t\tRestow_Reason as string,\n\t\tContainer_Line_Id as string,\n\t\tContainer_Line_Role as string,\n\t\tpow as string,\n\t\tufv_gkey as integer,\n\t\tBerth_Id as string,\n\t\tGoods_And_Ctr_Wt_Kg as double,\n\t\tactive_ufv as integer,\n\t\tRequires_Power_Flag as string,\n\t\tOOG_Flag as string,\n\t\tShipper_Id as string,\n\t\tConsignee_Id as string,\n\t\tCommodity_Id as string,\n\t\tATA as timestamp,\n\t\tATD as timestamp,\n\t\tRehandles as string,\n\t\tYear as integer,\n\t\tMonth as integer,\n\t\tWeek as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'silver/moves') ~> source1\nsource(output(\n\t\tComplex_Id as string,\n\t\tFacility_Id as string,\n\t\tCarrier_Visit_Id as string,\n\t\tPhase as string,\n\t\tVisit_Nbr as string,\n\t\tCarrier_Mode as string,\n\t\tATA as timestamp,\n\t\tATD as timestamp,\n\t\tETA as timestamp,\n\t\tETD as timestamp,\n\t\tOperator_Line_Id as string,\n\t\tOperator_Line_Role as string,\n\t\tOperator_Line_Name as string,\n\t\tTime_First_Availabilty as string,\n\t\tTime_Discharge_Complete as string,\n\t\tService_Id as string,\n\t\tService_Name as string,\n\t\tVessel_Id as string,\n\t\tIB_VYG as string,\n\t\tOB_VYG as string,\n\t\tCarrier_Name as string,\n\t\tVessel_Class as string,\n\t\tPublished_ETA as string,\n\t\tPublished_ETD as string,\n\t\tStart_Work as string,\n\t\tEnd_Work as string,\n\t\tBegin_Receive_Date as string,\n\t\tCargo_Cutoff_Date as string,\n\t\tHazard_Cutoff_Date as string,\n\t\tReefer_Cutoff_Date as string,\n\t\tLabor_On_Board_Date as string,\n\t\tLabor_Off_Board_Date as string,\n\t\tOff_Port_Arrival_Date as string,\n\t\tOff_Port_Departure as string,\n\t\tPilot_On_Board_Date as string,\n\t\tPilot_Off_Board_Date as string,\n\t\tEst_BBK_Discharge as string,\n\t\tEst_BBK_Load as string,\n\t\tEst_Load as string,\n\t\tEst_Discharge as string,\n\t\tEst_Restow as string,\n\t\tEst_Shift as string,\n\t\tvvFlexString01 as string,\n\t\tvvFlexString02 as string,\n\t\tvvFlexString03 as string,\n\t\tvvFlexString04 as string,\n\t\tvvFlexString05 as string,\n\t\tvvFlexString06 as string,\n\t\tvvFlexString07 as string,\n\t\tvvFlexString08 as string,\n\t\tvvFlexDate01 as string,\n\t\tvvFlexDate02 as string,\n\t\tvvFlexDate03 as string,\n\t\tvvFlexDate04 as string,\n\t\tvvFlexDate05 as string,\n\t\tvvFlexDate06 as string,\n\t\tvvFlexDate07 as string,\n\t\tvvFlexDate08 as string,\n\t\tCarrier_Visit_Key as integer,\n\t\tVessel_Classification as string,\n\t\tVessel_Class_Length_Overall_cm as integer,\n\t\tVessel_Class_Beam_cm as short,\n\t\tVessel_TEU_Capacity as string,\n\t\tLloyds_Code as string,\n\t\tTimeFirstAvailabilty as timestamp,\n\t\tStartWork as timestamp,\n\t\tTimeDischargeComplete as timestamp,\n\t\tEndWork as timestamp,\n\t\tWeek as integer,\n\t\tYear as integer,\n\t\tMonth as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'silver/vessel_visits') ~> source2\nsource(output(\n\t\tdate_of_gang as date,\n\t\tGang as short,\n\t\tCall_Sign as string,\n\t\tVessel_name as string,\n\t\tImp_Voy as string,\n\t\tExp_Voy as string,\n\t\tQuay_Crane as short,\n\t\tvessel_Ops as string,\n\t\tZeile as short,\n\t\tCategory as string,\n\t\tCategory_description as string,\n\t\tSite as string,\n\t\tID as integer,\n\t\tvon_Call_Sign as string,\n\t\t{von_Brücke} as short,\n\t\tTeam as string,\n\t\tCode as string,\n\t\tStart as string,\n\t\tStop as string,\n\t\tAccounting as string,\n\t\tAktiv_Stunden as double,\n\t\tZeitsteuerung as string,\n\t\tVerz as string,\n\t\tLabour_No as integer,\n\t\tDuration as double,\n\t\tTDR as string,\n\t\tOperation_Report as integer,\n\t\tSystem as string,\n\t\tReise as integer,\n\t\taktiv_von as string,\n\t\taktiv_bis as string,\n\t\tStatus as string,\n\t\tStapler_B as boolean,\n\t\tStd_Stapler_B as boolean,\n\t\t{Letzte_Änderung} as string,\n\t\tVA as short,\n\t\tAR as short,\n\t\tCB as boolean,\n\t\tVC as short,\n\t\tZM as boolean,\n\t\tST as boolean,\n\t\tRS as boolean,\n\t\tSpr as short,\n\t\tStd_VA as double,\n\t\tStd_AR as double,\n\t\tStd_CB as double,\n\t\tStd_VC as double,\n\t\tStd_ZM as boolean,\n\t\tStd_RS as boolean,\n\t\tST_Std as boolean,\n\t\tStd_Spr as double,\n\t\tBemerkung as string,\n\t\tBrutto_Zeit as short,\n\t\tNetto_Zeit as boolean,\n\t\tStammcode as string,\n\t\tTerminal as string,\n\t\tDokument_Nr as boolean,\n\t\tnew_category as string,\n\t\tdesription_of_activity as string,\n\t\tYear as integer,\n\t\tMonth as integer,\n\t\tWeek as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'silver/delays') ~> source3\nsource1 filter(Event_Type_Id==\"UNIT_DISCH\" || Event_Type_Id == \"UNIT_LOAD\") ~> Filter1\nFilter1, source2 join(source1@Carrier_Visit_Key == source2@Carrier_Visit_Key,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tmve_gkey,\n\t\tUnit_Nbr,\n\t\tFacility_Id = source1@Facility_Id,\n\t\tComplex_Id = source1@Complex_Id,\n\t\tYard_Id,\n\t\tCarrier_Visit_Key = source1@Carrier_Visit_Key,\n\t\tEvent_Type_Id,\n\t\tMove_Kind,\n\t\tFrom_Location,\n\t\tTo_Location,\n\t\tFrom_Position_Name,\n\t\tTo_Position_Name,\n\t\tCarry_CHE_Operator_Id,\n\t\tFetch_CHE_Operator_Id,\n\t\tPut_CHE_Operator_Id,\n\t\tFetch_CHE_Id,\n\t\tFetch_CHE_Kind,\n\t\tCarry_CHE_Id,\n\t\tCarry_CHE_Kind,\n\t\tPut_CHE_Id,\n\t\tPut_CHE_Kind,\n\t\tQC_CHE_Id,\n\t\tQC_CHE_Kind,\n\t\tt_carry_complete,\n\t\tt_put,\n\t\tt_fetch,\n\t\tt_dispatch,\n\t\tt_discharge,\n\t\tt_carry_dispatch,\n\t\tt_carry_fetch_ready,\n\t\tt_carry_put_ready,\n\t\tdist_carry,\n\t\tdist_start,\n\t\tTwin_Fetch,\n\t\tTwin_Carry,\n\t\tTwin_Put,\n\t\tCategory_Id,\n\t\tFreight_Kind_Id,\n\t\tto_pos_gkey,\n\t\tfm_pos_gkey,\n\t\tRestow_Reason,\n\t\tContainer_Line_Id,\n\t\tContainer_Line_Role,\n\t\tpow,\n\t\tufv_gkey,\n\t\tBerth_Id,\n\t\tGoods_And_Ctr_Wt_Kg,\n\t\tactive_ufv,\n\t\tRequires_Power_Flag,\n\t\tOOG_Flag,\n\t\tShipper_Id,\n\t\tConsignee_Id,\n\t\tCommodity_Id,\n\t\tATA = source1@ATA,\n\t\tATD = source1@ATD,\n\t\tRehandles,\n\t\tYear = source1@Year,\n\t\tMonth = source1@Month,\n\t\tWeek = source1@Week,\n\t\tCarrier_Visit_Id,\n\t\tCarrier_Mode,\n\t\tOperator_Line_Id,\n\t\tOperator_Line_Name,\n\t\tService_Name,\n\t\tVessel_Id,\n\t\tCarrier_Name,\n\t\tVessel_Class,\n\t\tVessel_Classification,\n\t\tVisit_Nbr\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(Time_Completed_Date_Time = iif(Event_Type_Id== \"UNIT_LOAD\", iifNull(t_put,t_carry_complete),iifNull(t_fetch,t_discharge))) ~> DerivedColumn1\nDerivedColumn1 derive(Time = toString(Time_Completed_Date_Time,'HH:mm:ss'),\n\t\tDate = toDate(toString(Time_Completed_Date_Time,'yyyy-MM-dd'))) ~> DerivedColumn2\nDerivedColumn6 derive(Shift_Start_Time = iif(Day_Of_Week==1 || Day_Of_Week==7,\r\n    iif(Time>=toString('06:00:00') && Time<toString('12:00:00'),\r\n        toTimestamp(concat(toString(Date),' ','06:00:00')),\r\n        iif(Time>=toString('12:00:00') && Time<toString('18:00:00'),\r\n            toTimestamp(concat(toString(Date),' ','12:00:00')),\r\n            iif(Time>=toString('18:00:00') && Time<toString('24:00:00'),\r\n                toTimestamp(concat(toString(Date),' ','18:00:00')),\r\n                toTimestamp(concat(toString(subDays(Date,1)),' ','24:00:00'))))),\r\n    iif(Time>=toString('06:00:00') && Time<toString('14:00:00'),\r\n        toTimestamp(concat(toString(Date),' ','06:00:00')),\r\n        iif(Time>=toString('14:00:00') && Time<toString('22:00:00'),\r\n            toTimestamp(concat(toString(Date),' ','14:00:00')),\r\n            iif(Time>=toString('22:00:00'),\r\n                toTimestamp(concat(toString(Date),' ','22:00:00')),\r\n\t\t\t\ttoTimestamp(concat(toString(subDays(Date,1)),' ','22:00:00')))))),\n\t\tShift_End_Time = iif(Day_Of_Week==1 || Day_Of_Week==7,\r\n    iif(Time>=toString('06:00:00') && Time<toString('12:00:00'),\r\n        toTimestamp(concat(toString(Date),' ','11:59:59')),\r\n        iif(Time>=toString('12:00:00') && Time<toString('18:00:00'),\r\n            toTimestamp(concat(toString(Date),' ','17:59:59')),\r\n            iif(Time>=toString('18:00:00') && Time<toString('24:00:00'),\r\n                toTimestamp(concat(toString(Date),' ','23:59:59')),\r\n                toTimestamp(concat(toString(Date),' ','05:59:59'))))),\r\n    iif(Time>=toString('06:00:00') && Time<toString('14:00:00'),\r\n        toTimestamp(concat(toString(Date),' ','13:59:59')),\r\n        iif(Time>=toString('14:00:00') && Time<toString('22:00:00'),\r\n            toTimestamp(concat(toString(Date),' ','21:59:59')),\r\n            iif(Time>=toString('22:00:00'),\r\n                toTimestamp(concat(toString(addDays(Date,1)),' ','05:59:59')),\r\n\t\t\t\ttoTimestamp(concat(toString(Date),' ','05:59:59'))))))) ~> DerivedColumn3\nDerivedColumn5 aggregate(groupBy(pow,\n\t\tShift_Start_Time,\n\t\tShift_End_Time,\n\t\tShift_Date,\n\t\tShift),\n\tFirst_Lift = min(Time_Completed_Date_Time),\n\t\tLast_Lift = max(Time_Completed_Date_Time),\n\t\tMove_Count = countDistinct(mve_gkey)) ~> Aggregate1\nFilter4 derive(WorkTime = Last_Lift-First_Lift,\n\t\tYear = iifNull(year(Shift_Date),0),\n\t\tMonth = iifNull(month(Shift_Date),0),\n\t\tWeek = iifNull(weekOfYear(Shift_Date),0),\n\t\tPow_No = toInteger(iif(left(pow,2)=='SK',substring(pow, 3),iif(left(pow,1)=='M',substring(pow, 2),'0')))) ~> DerivedColumn4\nDerivedColumn3 derive(Shift = iif(toString(Shift_Start_Time, 'HH:mm:ss')==toString('06:00:00'),1,\r\niif(toString(Shift_Start_Time, 'HH:mm:ss')==toString('14:00:00')||toString(Shift_Start_Time, 'HH:mm:ss')==toString('12:00:00'),2,\r\niif(toString(Shift_Start_Time, 'HH:mm:ss')==toString('22:00:00')||toString(Shift_Start_Time, 'HH:mm:ss')==toString('18:00:00'),3,4)))) ~> DerivedColumn5\nDerivedColumn2 derive(Day_Of_Week = dayOfWeek(iif(Time<toString('06:00:00'),subDays(Date,1),Date)),\n\t\tShift_Date = iif(Time<toString('06:00:00'),subDays(Date,1),Date)) ~> DerivedColumn6\nsource3 filter(Code=='BKO' || Code=='MTG'|| Code=='OFF'||Code=='AIT'||Code=='BBK'||Code=='LBR'||Code=='AIL' || Code=='COS'|| Code=='DTW'||Code=='INC'||Code=='LCA'||Code=='MTW'\r\n|| Code=='OTL'||Code=='WCC'||Code=='WEA'||Code=='WTG'||Code=='WVL') ~> Filter3\nAggregate1 filter(pow!='') ~> Filter4\nFilter3 derive(Start_datetime = toTimestamp(concat(toString(date_of_gang),' ',Start)),\n\t\tStop_datetime = iif(Stop<Start,toTimestamp(concat(toString(addDays(date_of_gang,1)),' ',Stop)),toTimestamp(concat(toString(date_of_gang),' ',Stop)))) ~> DerivedColumn7\nFilter5, Select2 join(Pow_No == Quay_Crane\n\t&& First_Lift <= Start_datetime\n\t&& Last_Lift >= Stop_datetime,\n\tjoinType:'left',\n\tbroadcast: 'right')~> Join2\nDerivedColumn7 derive(Delay = Stop_datetime-Start_datetime) ~> DerivedColumn8\naggregate2 derive(Final_WorkTime = WorkTime-iifNull(Delay,0)) ~> DerivedColumn9\nDerivedColumn8 select(mapColumn(\n\t\tdate_of_gang,\n\t\tVessel_name,\n\t\tQuay_Crane,\n\t\tCode,\n\t\tStart,\n\t\tStop,\n\t\tDuration,\n\t\tdesription_of_activity,\n\t\tYear,\n\t\tMonth,\n\t\tWeek,\n\t\tStart_datetime,\n\t\tStop_datetime,\n\t\tDelay\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nDerivedColumn4 filter(Pow_No!=0) ~> Filter5\nJoin2 select(mapColumn(\n\t\tpow,\n\t\tShift_Start_Time,\n\t\tShift_End_Time,\n\t\tShift_Date,\n\t\tShift,\n\t\tFirst_Lift,\n\t\tLast_Lift,\n\t\tMove_Count,\n\t\tWorkTime,\n\t\tYear = DerivedColumn4@Year,\n\t\tMonth = DerivedColumn4@Month,\n\t\tWeek = DerivedColumn4@Week,\n\t\tPow_No,\n\t\tdate_of_gang,\n\t\tVessel_name,\n\t\tQuay_Crane,\n\t\tCode,\n\t\tStart,\n\t\tStop,\n\t\tDuration,\n\t\tdesription_of_activity,\n\t\tStart_datetime,\n\t\tStop_datetime,\n\t\tDelay\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 aggregate(groupBy(pow,\n\t\tShift_Start_Time,\n\t\tShift_End_Time,\n\t\tShift_Date,\n\t\tShift,\n\t\tFirst_Lift,\n\t\tLast_Lift,\n\t\tMove_Count,\n\t\tWorkTime,\n\t\tYear,\n\t\tMonth,\n\t\tWeek,\n\t\tPow_No),\n\tDelay = sum(Delay)) ~> aggregate2\nDerivedColumn9 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'eurogatectb',\n\tfolderPath: 'gold/GMPH',\n\ttruncate:true,\n\tmergeSchema: true,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('key',\n\t\t0,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t)) ~> sink1"
		}
	}
}