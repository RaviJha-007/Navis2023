{
	"name": "RTG EcEvents_mict",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService1",
						"type": "LinkedServiceReference"
					},
					"name": "RTG"
				},
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "Workhours"
				}
			],
			"transformations": [
				{
					"name": "select"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "DerivedColumn35"
				},
				{
					"name": "Filter5"
				},
				{
					"name": "Aggregate3"
				},
				{
					"name": "DerivedColumn9"
				},
				{
					"name": "Window1"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Sort2"
				},
				{
					"name": "Window2"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn5"
				},
				{
					"name": "Filter6"
				},
				{
					"name": "DerivedColumn6"
				},
				{
					"name": "Filter7"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "derivedColumn11"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"script": "source(output(\n\t\tecEventGkey as long,\n\t\tyardGkey as string,\n\t\tYardID as string,\n\t\tFcyID as string,\n\t\tcheKind as string,\n\t\tcheName as string,\n\t\tcheID as long,\n\t\tEcEventTime as timestamp,\n\t\ttype as short,\n\t\tsubType as short,\n\t\ttypeDescription as string,\n\t\tfromCheIdName as string,\n\t\tToCheIdName as string,\n\t\tunitIdName as string,\n\t\tpowName as string,\n\t\tpoolName as string,\n\t\tworkQueue as string,\n\t\ttravelDistance as short,\n\t\tmoveKind as string,\n\t\tisTwinMove as string,\n\t\tstartDistance as short,\n\t\tworkAssignmentId as double,\n\t\tunitReference as string,\n\t\ttranId as string,\n\t\tlocType as string,\n\t\tlocId as string,\n\t\tlocSlot as string,\n\t\topsPosId as string,\n\t\tunladenLoctype as string,\n\t\tunladenLocid as string,\n\t\tunladenLocSlot as string,\n\t\tladenLoctype as string,\n\t\tladenLocid as string,\n\t\tladenLocSlot as string,\n\t\tlastEstMoveTime as string,\n\t\tYear as integer,\n\t\tMonth as integer,\n\t\tWeek as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'mict',\n\tfolderPath: 'silver/ecevents') ~> source1\nsource1 select(mapColumn(\n\t\tecEventGkey,\n\t\tyardGkey,\n\t\tYardID,\n\t\tFcyID,\n\t\tcheKind,\n\t\tCHE_Name = cheName,\n\t\tCHE_ID = cheID,\n\t\tTimeStamp = EcEventTime,\n\t\teventType = type,\n\t\teventSubType = subType,\n\t\teventTypeDescription = typeDescription,\n\t\tunit = unitIdName,\n\t\tpow = powName,\n\t\tpool = poolName,\n\t\tworkQueue,\n\t\tmoveKind,\n\t\tlocSlot,\n\t\tunladenLocSlot,\n\t\tladen_LocSlot = ladenLocSlot,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select\nselect filter(cheKind=='RTG' && (eventTypeDescription=='CMPL' || eventTypeDescription=='ATRH')) ~> Filter1\nFilter1 aggregate(groupBy(ecEventGkey),\n\teach(match(name!='ecEventGkey'), $$ = first($$))) ~> Aggregate1\nAggregate1 derive(Date = toDate(toString(TimeStamp,'yyyy-MM-dd')),\n\t\tTime = toString(TimeStamp,'HH:mm:ss'),\n\t\tShiftStartTime = iif(toString(TimeStamp,'HH:mm:ss')>=toString('07:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('19:00:00'),\r\n        toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','07:00:00')),\r\n\t\tiif(toString(TimeStamp,'HH:mm:ss')>=toString('19:00:00') && toString(TimeStamp,'HH:mm:ss')<=toString('23:59:59'),\r\n            toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00')),\r\n            iif(toString(TimeStamp,'HH:mm:ss')>=toString('00:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('07:00:00'),\r\n\t\t\t\ttoTimestamp(concat(toString(subDays(TimeStamp,1),'yyyy-MM-dd'),' ','19:00:00')),\r\n                toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00'))))),\n\t\tShiftEndTime = iif(toString(TimeStamp,'HH:mm:ss')>=toString('07:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('19:00:00'),\r\n        toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','18:59:00')),\r\n\t\tiif(toString(TimeStamp,'HH:mm:ss')>=toString('19:00:00') && toString(TimeStamp,'HH:mm:ss')<=toString('23:59:59'),\r\n            toTimestamp(concat(toString(addDays(TimeStamp,1),'yyyy-MM-dd'),' ','06:59:59')),\r\n            iif(toString(TimeStamp,'HH:mm:ss')>=toString('00:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('07:00:00'),\r\n\t\t\t\ttoTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00')),\r\n                toTimestamp(concat(toString(subDays(TimeStamp,1),'yyyy-MM-dd'),' ','19:00:00'))))),\n\t\tMoveCount = iif(moveKind=='YARD',iif(left(locSlot,5)==left(laden_LocSlot,5),2,1),1),\n\t\tBlock = left(locSlot,3),\n\t\tHour = toString(TimeStamp, 'HH'),\n\t\tWeekofYear = weekOfYear(iif(toString(TimeStamp,'HH:mm:ss')<toString('02:00:00'),toDate(toString(subDays(TimeStamp,1),'yyyy-MM-dd')),toDate(toString(TimeStamp,'yyyy-MM-dd'))))) ~> DerivedColumn35\nselect filter((eventTypeDescription == 'LGOF' || eventTypeDescription == 'LGON') && cheKind == 'RTG') ~> Filter5\nFilter5 aggregate(groupBy(ecEventGkey),\n\teach(match(name!='ecEventGkey'), $$ = first($$))) ~> Aggregate3\nAggregate3 derive(WeekofYear = weekOfYear(iif(toString(TimeStamp,'HH:mm:ss')<toString('02:00:00'),toDate(toString(subDays(TimeStamp,1),'yyyy-MM-dd')),toDate(toString(TimeStamp,'yyyy-MM-dd')))),\n\t\tDate = toDate(toString(TimeStamp,'yyyy-MM-dd')),\n\t\tTime = toString(TimeStamp,'HH:mm:ss'),\n\t\tShiftStartTime = iif(toString(TimeStamp,'HH:mm:ss')>=toString('07:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('19:00:00'),\r\n        toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','07:00:00')),\r\n\t\tiif(toString(TimeStamp,'HH:mm:ss')>=toString('19:00:00') && toString(TimeStamp,'HH:mm:ss')<=toString('23:59:59'),\r\n            toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00')),\r\n            iif(toString(TimeStamp,'HH:mm:ss')>=toString('00:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('07:00:00'),\r\n\t\t\t\ttoTimestamp(concat(toString(subDays(TimeStamp,1),'yyyy-MM-dd'),' ','19:00:00')),\r\n                toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00'))))),\n\t\tShiftEndTime = iif(toString(TimeStamp,'HH:mm:ss')>=toString('07:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('19:00:00'),\r\n        toTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','18:59:00')),\r\n\t\tiif(toString(TimeStamp,'HH:mm:ss')>=toString('19:00:00') && toString(TimeStamp,'HH:mm:ss')<=toString('23:59:59'),\r\n            toTimestamp(concat(toString(addDays(TimeStamp,1),'yyyy-MM-dd'),' ','06:59:59')),\r\n            iif(toString(TimeStamp,'HH:mm:ss')>=toString('00:00:00') && toString(TimeStamp,'HH:mm:ss')<toString('07:00:00'),\r\n\t\t\t\ttoTimestamp(concat(toString(TimeStamp,'yyyy-MM-dd'),' ','19:00:00')),\r\n                toTimestamp(concat(toString(subDays(TimeStamp,1),'yyyy-MM-dd'),' ','19:00:00'))))),\n\t\tBlock = left(locSlot,3)) ~> DerivedColumn9\nSort1 window(asc(yardGkey, true),\n\tasc(CHE_ID, true),\n\tasc(TimeStamp, true),\n\tCHE_ID_PREV = lag(CHE_ID),\n\t\tCHE_ID_NXT = lead(CHE_ID),\n\t\tTimeStamp_PREV = lag(TimeStamp),\n\t\tTimeStamp_NXT = lead(TimeStamp),\n\t\teventTypeDescription_PREV = lag(eventTypeDescription),\n\t\teventTypeDescription_NXT = lead(eventTypeDescription)) ~> Window1\nWindow1 derive(LGOF = case(CHE_ID==CHE_ID_NXT && (CHE_ID==CHE_ID_PREV || CHE_ID!=CHE_ID_PREV),case(eventTypeDescription=='LGON',case(eventTypeDescription_NXT=='LGOF',iif(TimeStamp_NXT>ShiftEndTime,ShiftEndTime,TimeStamp_NXT),eventTypeDescription_NXT=='LGON',iif(TimeStamp_NXT>ShiftEndTime,ShiftEndTime,TimeStamp_NXT-seconds(1)))),(CHE_ID!=CHE_ID_NXT && (CHE_ID==CHE_ID_PREV || CHE_ID!=CHE_ID_PREV)),case(eventTypeDescription=='LGON', ShiftEndTime)),\n\t\tLGON = case(eventTypeDescription=='LGON',TimeStamp),\n\t\tWorkTime = toDouble((case(CHE_ID==CHE_ID_NXT && (CHE_ID==CHE_ID_PREV || CHE_ID!=CHE_ID_PREV),case(eventTypeDescription=='LGON',case(eventTypeDescription_NXT=='LGOF',iif(TimeStamp_NXT>ShiftEndTime,ShiftEndTime,TimeStamp_NXT),eventTypeDescription_NXT=='LGON',iif(TimeStamp_NXT>ShiftEndTime,ShiftEndTime,TimeStamp_NXT-seconds(1)))),(CHE_ID!=CHE_ID_NXT && (CHE_ID==CHE_ID_PREV || CHE_ID!=CHE_ID_PREV)),case(eventTypeDescription=='LGON', ShiftEndTime))-case(eventTypeDescription=='LGON',TimeStamp))/3600000)) ~> DerivedColumn4\nderivedColumn11 sort(asc(yardGkey, true),\n\tasc(CHE_ID, true),\n\tasc(TimeStamp, true)) ~> Sort1\nFilter6 sort(asc(yardGkey, true),\n\tasc(CHE_ID, true),\n\tasc(TimeStamp, true)) ~> Sort2\nSort2 window(asc(yardGkey, true),\n\tasc(CHE_ID, true),\n\tasc(TimeStamp, true),\n\tCHE_ID_PREV = lag(CHE_ID),\n\t\tCHE_ID_NXT = lead(CHE_ID),\n\t\tTimeStamp_PREV = lag(TimeStamp),\n\t\tTimeStamp_NXT = lead(TimeStamp),\n\t\tlocSlot_PREV = lag(locSlot),\n\t\tlocSlot_NXT = lead(locSlot),\n\t\tecEventGkey_PREV = lag(ecEventGkey),\n\t\tecEventGkey_NXT = lead(ecEventGkey),\n\t\tShiftDate_PREV = lag(ShiftDate),\n\t\tShiftDate_NXT = lead(ShiftDate),\n\t\tLGON_PREV = lag(LGON),\n\t\tLGON_NXT = lead(LGON),\n\t\tLGOF_PREV = lag(LGOF),\n\t\tLGOF_NXT = lead(LGOF)) ~> Window2\nderivedColumn2, Filter7 join(Aggregate1@CHE_ID == Aggregate3@CHE_ID\n\t&& DerivedColumn35@ShiftStartTime == DerivedColumn35@ShiftStartTime\n\t&& DerivedColumn35@ShiftEndTime == DerivedColumn35@ShiftEndTime,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'right')~> Join1\nJoin1 select(mapColumn(\n\t\teach(match(/* All input columns */true()),\n\t\t\t/* Input name */$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(Valid = iif(TimeStamp>=LGON && TimeStamp<=LGOF,1,0)) ~> DerivedColumn5\nDerivedColumn5 filter(Valid==1) ~> Filter6\nWindow2 derive(FirstMove = case(CHE_ID!=CHE_ID_PREV,TimeStamp,LGON!=LGON_PREV,TimeStamp),\n\t\tLastMove = case(CHE_ID!=CHE_ID_NXT,TimeStamp,LGOF!=LGOF_NXT,TimeStamp),\n\t\tIdleTimeFL = case(isNull(case(CHE_ID!=CHE_ID_PREV,TimeStamp,LGON!=LGON_PREV,TimeStamp))==false(),(case(CHE_ID!=CHE_ID_PREV,TimeStamp,LGON!=LGON_PREV,TimeStamp)-LGON)/3600000,isNull(case(CHE_ID!=CHE_ID_NXT,TimeStamp,LGOF!=LGOF_NXT,TimeStamp))==false(),(LGOF-case(CHE_ID!=CHE_ID_NXT,TimeStamp,LGOF!=LGOF_NXT,TimeStamp))/3600000),\n\t\tRTGIdleTime = iif(CHE_ID==CHE_ID_NXT && ecEventGkey!=ecEventGkey_NXT && ShiftDate==ShiftDate_NXT && LGON==LGON_NXT && LGOF==LGOF_NXT,iif((TimeStamp_NXT-TimeStamp)<0,0.0,toFloat((TimeStamp_NXT-TimeStamp)/3600000)),0.0),\n\t\tBayChangeInstance = iif(CHE_ID==CHE_ID_NXT,iif(ecEventGkey!=ecEventGkey_NXT,iif(ShiftDate==ShiftDate_NXT && LGON==LGON_NXT && LGOF==LGOF_NXT,iif(left(locSlot,3)==left(locSlot_NXT,3),iif(left(locSlot,5)!=left(locSlot_NXT,5),1,0),0),0),0),0),\n\t\tBayChangeCount = iif(isNull(locSlot_NXT)==true(),0,iif(iif(CHE_ID==CHE_ID_NXT,iif(ecEventGkey!=ecEventGkey_NXT,iif(ShiftDate==ShiftDate_NXT && LGON==LGON_NXT && LGOF==LGOF_NXT,iif(left(locSlot,3)==left(locSlot_NXT,3),iif(left(locSlot,5)!=left(locSlot_NXT,5),1,0),0),0),0),0)==1,\r\niif(toInteger(substring(locSlot,4,2))>toInteger(substring(locSlot_NXT,4,2)),iif( \r\ntoInteger(substring(locSlot,4,2))%2==0,iif(toInteger(substring(locSlot_NXT,4,2))%2==0,(toInteger(substring(locSlot,4,2))-1)-(toInteger(substring(locSlot_NXT,4,2))+1),\r\n(toInteger(substring(locSlot,4,2))-1)-(toInteger(substring(locSlot_NXT,4,2)))), \r\niif(toInteger(substring(locSlot_NXT,4,2))%2==0,toInteger(substring(locSlot,4,2))-(toInteger(substring(locSlot_NXT,4,2))+1),\r\n(toInteger(substring(locSlot,4,2)))-(toInteger(substring(locSlot_NXT,4,2)))))\r\n,iif(toInteger(substring(locSlot_NXT,4,2))%2==0,iif(\r\n    toInteger(substring(locSlot,4,2))%2==0,(toInteger(substring(locSlot_NXT,4,2))-1)-(toInteger(substring(locSlot,4,2))+1) \r\n,(toInteger(substring(locSlot_NXT,4,2))-1)-(toInteger(substring(locSlot,4,2)))) \r\n,iif(toInteger(substring(locSlot,4,2))%2==0,(toInteger(substring(locSlot_NXT,4,2)))-(toInteger(substring(locSlot,4,2))+1) \r\n,(toInteger(substring(locSlot_NXT,4,2)))-(toInteger(substring(locSlot,4,2)))))),0)),\n\t\tBlockChangeInstance = iif(CHE_ID==CHE_ID_NXT,iif(ecEventGkey!=ecEventGkey_NXT,iif(ShiftDate==ShiftDate_NXT && LGON==LGON_NXT && LGOF==LGOF_NXT,iif(left(locSlot,3)!=left(locSlot_NXT,3),1,0),0),0),0),\n\t\tLaneChangeInstance = iif(CHE_ID==CHE_ID_NXT,iif(ecEventGkey!=ecEventGkey_NXT,iif(ShiftDate==ShiftDate_NXT && LGON==LGON_NXT && LGOF==LGOF_NXT,iif(left(locSlot,2)!=left(locSlot_NXT,2),1,0),0),0),0)) ~> DerivedColumn6\nDerivedColumn4 filter(isNull(WorkTime)==false()) ~> Filter7\nDerivedColumn6 alterRow(upsertIf(true())) ~> AlterRow1\nFilter7 alterRow(upsertIf(true())) ~> AlterRow2\nDerivedColumn9 derive(Shift = iif(toString(ShiftStartTime, 'HH:mm:ss')==toString('07:00:00'),\"Day\",iif(toString(ShiftStartTime, 'HH:mm:ss')==toString('19:00:00'),\"Night\",\"Day\")),\n\t\tShiftDate = iif(Time<toString('07:00:00'),subDays(Date,1),Date)) ~> derivedColumn11\nDerivedColumn35 derive(Shift = iif(toString(ShiftStartTime, 'HH:mm:ss')==toString('07:00:00'),\"Day\",iif(toString(ShiftStartTime, 'HH:mm:ss')==toString('19:00:00'),\"Night\",\"Day\")),\n\t\tShiftDate = iif(Time<toString('07:00:00'),subDays(Date,1),Date)) ~> derivedColumn2\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'mict',\n\tfolderPath: 'gold/rtg_ecevent',\n\tmergeSchema: true,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable: false,\n\tinsertable: false,\n\tupdateable: false,\n\tupsertable: true,\n\tkeys:['ecEventGkey'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\teach(match(/* All input columns */true()),\n\t\t\t/* Input name */$$ = $$)\n\t),\n\tpartitionBy('key',\n\t\t0,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t)) ~> RTG\nAlterRow2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'mict',\n\tfolderPath: 'gold/rtg_workhours',\n\tmergeSchema: false,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable: false,\n\tinsertable: false,\n\tupdateable: false,\n\tupsertable: true,\n\tkeys:['ecEventGkey'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('key',\n\t\t0,\n\t\tYear,\n\t\tMonth,\n\t\tWeek\n\t)) ~> Workhours"
		}
	}
}