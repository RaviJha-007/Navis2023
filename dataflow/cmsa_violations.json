{
	"name": "cmsa_violations",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "deckingfile"
				},
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "MoveHistory"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RemoveExtraColumns"
				},
				{
					"name": "DeckingPosName"
				},
				{
					"name": "RemoveTOPOSNameANDTimeStamp",
					"description": "Remove TOPOSName\nand \nTimeStamp"
				},
				{
					"name": "MERemoveExtraColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          gkey as integer,",
				"          uyv_gkey as integer,",
				"          unit_id as string,",
				"          time_stamp as string,",
				"          decking_type as string,",
				"          node_id as string,",
				"          yard as string,",
				"          from_pos_loctype as string,",
				"          from_pos_locid as string,",
				"          from_pos_loc_gkey as integer,",
				"          from_pos_slot as string,",
				"          from_pos_name as string,",
				"          from_pos_bin as string,",
				"          from_pos_tier as short,",
				"          to_pos_loctype as string,",
				"          to_pos_locid as string,",
				"          to_pos_loc_gkey as integer,",
				"          to_pos_slot as string,",
				"          to_pos_name as string,",
				"          to_pos_bin as string,",
				"          to_pos_tier as short,",
				"          total_score as short,",
				"          execution_time as short,",
				"          details as string,",
				"          phase as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['/bronze/violations-decking/load','bronze/violations-decking/archive'],",
				"     format: 'delimited',",
				"     fileSystem: 'cmsa-violations',",
				"     folderPath: 'bronze/violations-decking/load',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> deckingfile",
				"source(output(",
				"          {_col0_} as string,",
				"          {_col1_} as string,",
				"          {_col2_} as string,",
				"          {_col3_} as string,",
				"          {_col4_} as string,",
				"          {_col5_} as string,",
				"          {_col6_} as string,",
				"          {_col7_} as string,",
				"          {_col8_} as string,",
				"          {_col9_} as string,",
				"          {_col10_} as string,",
				"          {_col11_} as string,",
				"          {_col12_} as string,",
				"          {_col13_} as string,",
				"          {_col14_} as string,",
				"          {_col15_} as string,",
				"          {_col16_} as string,",
				"          {_col17_} as string,",
				"          {_col18_} as string,",
				"          {_col19_} as string,",
				"          {_col20_} as string,",
				"          {_col21_} as string,",
				"          {_col22_} as string,",
				"          {_col23_} as string,",
				"          {_col24_} as string,",
				"          {_col25_} as string,",
				"          {_col26_} as string,",
				"          {_col27_} as string,",
				"          {_col28_} as string,",
				"          {_col29_} as string,",
				"          {_col30_} as string,",
				"          {_col31_} as string,",
				"          {_col32_} as string,",
				"          {_col33_} as string,",
				"          {_col34_} as string,",
				"          {_col35_} as string,",
				"          {_col36_} as string,",
				"          {_col37_} as string,",
				"          {_col38_} as string,",
				"          {_col39_} as string,",
				"          {_col40_} as string,",
				"          {_col41_} as string,",
				"          {_col42_} as string,",
				"          {_col43_} as string,",
				"          {_col44_} as string,",
				"          {_col45_} as string,",
				"          {_col46_} as string,",
				"          {_col47_} as string,",
				"          {_col48_} as string,",
				"          {_col49_} as string,",
				"          {_col50_} as string,",
				"          {_col51_} as string,",
				"          {_col52_} as string,",
				"          {_col53_} as string,",
				"          {_col54_} as string,",
				"          {_col55_} as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['/bronze/violations-moves/load','bronze/violations-moves/archive'],",
				"     format: 'delimited',",
				"     fileSystem: 'cmsa-violations',",
				"     folderPath: 'bronze/violations-moves/load',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> MoveHistory",
				"deckingfile select(mapColumn(",
				"          gkey,",
				"          unit_id,",
				"          time_stamp,",
				"          decking_type,",
				"          to_pos_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveExtraColumns",
				"RemoveExtraColumns derive(DeckingPosName = substring(to_pos_name,8),",
				"          DeckingDateTime = toTimestamp(time_stamp,'yyyy mm dd HH:mm:ss.SSS')) ~> DeckingPosName",
				"DeckingPosName select(mapColumn(",
				"          gkey,",
				"          unit_id,",
				"          DeckingDateTime,",
				"          decking_type,",
				"          DeckingPosName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveTOPOSNameANDTimeStamp",
				"MoveHistory select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MERemoveExtraColumns"
			]
		}
	}
}