{
	"name": "cmsa_violations",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "deckingfile"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RemoveExtraColumns"
				},
				{
					"name": "DeckingPosName"
				},
				{
					"name": "RemoveTOPOSName"
				}
			],
			"scriptLines": [
				"source(output(",
				"          gkey as integer,",
				"          uyv_gkey as integer,",
				"          unit_id as string,",
				"          time_stamp as string,",
				"          decking_type as string,",
				"          node_id as string,",
				"          yard as string,",
				"          from_pos_loctype as string,",
				"          from_pos_locid as string,",
				"          from_pos_loc_gkey as integer,",
				"          from_pos_slot as string,",
				"          from_pos_name as string,",
				"          from_pos_bin as string,",
				"          from_pos_tier as short,",
				"          to_pos_loctype as string,",
				"          to_pos_locid as string,",
				"          to_pos_loc_gkey as integer,",
				"          to_pos_slot as string,",
				"          to_pos_name as string,",
				"          to_pos_bin as string,",
				"          to_pos_tier as short,",
				"          total_score as short,",
				"          execution_time as short,",
				"          details as string,",
				"          phase as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['/bronze/violations-decking/load','bronze/violations-decking/archive'],",
				"     format: 'delimited',",
				"     fileSystem: 'cmsa-violations',",
				"     folderPath: 'bronze/violations-decking/load',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> deckingfile",
				"deckingfile select(mapColumn(",
				"          gkey,",
				"          unit_id,",
				"          time_stamp,",
				"          decking_type,",
				"          to_pos_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveExtraColumns",
				"RemoveExtraColumns derive(DeckingPosName = substring(to_pos_name,8),",
				"          DeckingDateTime = toTimestamp(time_stamp,'yyyy mm dd HH:mm:ss.SSS')) ~> DeckingPosName",
				"DeckingPosName select(mapColumn(",
				"          gkey,",
				"          unit_id,",
				"          time_stamp,",
				"          decking_type,",
				"          DeckingPosName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveTOPOSName"
			]
		}
	}
}