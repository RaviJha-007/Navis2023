{
	"name": "tauranga_ladenUnladen",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "ecevents"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService2",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ecEventGkey as long,",
				"          yardGkey as long,",
				"          YARDID as string,",
				"          FCYID as string,",
				"          cheKind as string,",
				"          CHE_Name as string,",
				"          CHE_ID as short,",
				"          TimeStamp as string,",
				"          eventType as short,",
				"          eventSubType as short,",
				"          eventTypeDescription as string,",
				"          fromCheIdName as boolean,",
				"          ToCheIdName as boolean,",
				"          unit as string,",
				"          pow as string,",
				"          pool as string,",
				"          workQueue as string,",
				"          travelDistance as short,",
				"          moveKind as string,",
				"          isTwin as boolean,",
				"          startDistance as short,",
				"          workAssignment as long,",
				"          unitRef as string,",
				"          tran_ID as string,",
				"          locType as string,",
				"          locID as string,",
				"          locSlot as string,",
				"          opsPosID as string,",
				"          unladenLoctype as string,",
				"          unladenLocID as string,",
				"          unladenLocSlot as string,",
				"          ladenLoctype as string,",
				"          ladenLocID as string,",
				"          laden_LocSlot as string,",
				"          lastEstMoveTime as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     moveFiles: ['/bronze/ecevents/load','bronze/ecevents/archive'],",
				"     format: 'delimited',",
				"     fileSystem: 'tauranga',",
				"     folderPath: 'bronze/ecevents/load',",
				"     fileName: 'ECEvents.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> ecevents",
				"ecevents filter(not(isNull(ecEventGkey)) && cheKind == 'SC' && (eventTypeDescription == 'TVCO' || eventTypeDescription == 'TYCO') && (moveKind == 'DSCH' || moveKind == 'LOAD')) ~> filter1",
				"filter1 derive(Date = toDate(TimeStamp),",
				"          Time = toTimestamp(TimeStamp),",
				"          {Day of Week} = dayOfWeek(toDate(TimeStamp))) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          ecEventGkey,",
				"          yardGkey,",
				"          YARDID,",
				"          FCYID,",
				"          cheKind,",
				"          CHE_Name,",
				"          CHE_ID,",
				"          TimeStamp,",
				"          eventType,",
				"          eventSubType,",
				"          eventTypeDescription,",
				"          fromCheIdName,",
				"          ToCheIdName,",
				"          unit,",
				"          pow,",
				"          pool,",
				"          workQueue,",
				"          Laden = travelDistance,",
				"          moveKind,",
				"          isTwin,",
				"          UnLaden = startDistance,",
				"          workAssignment,",
				"          unitRef,",
				"          tran_ID,",
				"          locType,",
				"          locID,",
				"          locSlot,",
				"          opsPosID,",
				"          unladenLoctype,",
				"          unladenLocID,",
				"          unladenLocSlot,",
				"          ladenLoctype,",
				"          ladenLocID,",
				"          laden_LocSlot,",
				"          lastEstMoveTime,",
				"          Date,",
				"          Time,",
				"          Day_of_Week = {Day of Week}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 alterRow(upsertIf(true()),",
				"     insertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'tauranga',",
				"     folderPath: 'gold/laden_unladen',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:['ecEventGkey'],",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}